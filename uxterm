#!/bin/sh
# $XTermId: uxterm,v 1.29 2020/03/07 15:52:31 tom Exp $
# -----------------------------------------------------------------------------
# this file is part of xterm
#
# Copyright 2001-2007,2020 by Thomas E. Dickey
# 
#                         All Rights Reserved
# 
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# 
# Except as contained in this notice, the name(s) of the above copyright
# holders shall not be used in advertising or otherwise to promote the
# sale, use or other dealings in this Software without prior written
# authorization.
# -----------------------------------------------------------------------------
#
# wrapper script to setup xterm with UTF-8 locale

whoami=uxterm

: "${XTERM_PROGRAM=xterm}"

# Check if there is a workable locale program.  If there is not, we will read
# something via the standard error.  Ignore whatever is written to the
# standard output.
locale=`sh -c "LC_ALL=C LC_CTYPE=C LANG=C locale >/dev/null" 2>&1`
found=no

# Check for -version and -help options, to provide a simple return without
# requiring the program to create a window:
if test $# = 1
then
	case $1 in
	-v|-ver*|-h|-he*)
		$XTERM_PROGRAM "$@"
		exit $?
		;;
	esac
fi

# Check environment variables that might be used for encoding:
for name in LC_ALL LC_CTYPE LANG
do
	eval 'value=$'$name
	if test -n "$value" ; then
		case $value in
		*.utf8|*.UTF8|*.utf-8|*.UTF-8)
			found=yes
			;;
		*.utf8@*|*.UTF8@*|*.utf-8@*|*.UTF-8@*)
			found=yes
			;;
		*)
			value=""	# ignore
			continue	# keep trying
			;;
		esac
		break
	fi
done

# If we didn't find one that used UTF-8, modify the safest one.  Not everyone
# has a UTF-8 locale installed (and there appears to be no trivial/portable way
# to determine whether it is, from a shell script).  We could check if the
# user's shell does not reset unknown locale specifiers, but not all shells do.
if test $found != yes ; then
	if test -n "$value" ; then
		value=`echo ${value} |sed -e 's/[.@].*//'`.UTF-8
	else
		expect=
		for name in LC_ALL LC_CTYPE LANG
		do
			eval 'check=$'$name
			if test -n "$check"
			then
				expect=`echo "$check" | sed -e 's/[.@].*$//'`
				test -n "$expect" && break
			fi
		done
		if test -z "$expect" ; then
			name="LC_CTYPE"
			expect="en_US"
		fi
		value=`locale -a | awk -v "expect=$expect" 'BEGIN {
			exact=""
			maybe=""
		}
		/[.](utf|UTF)[-]?8(@.*)?$/ {
			if (index($0, "C.") == 1) {
				maybe=$0;
			}
			if (index($0, expect ".") == 1) {
				exact=$0;
			}
		}
		END {
			if ( exact != "" ) {
				print exact;
			} else if ( maybe != "" ) {
				print maybe;
			} else {
				print "";
			}
		}
		'`
		test -z "$value" && value="en_US.UTF-8"
	fi
	eval save=\$${name}
	eval ${name}=${value}
	eval export ${name}
	if test -z "$locale" ; then
		# The 'locale' program tries to do a sanity check.
		check=`sh -c "locale >/dev/null" 2>&1`
		if test -n "$check" ; then
			eval ${name}="${save}"
			eval export ${name}

			echo "$whoami tried to use locale $value by setting \$$name" >&2
			xmessage -file - <<EOF
$whoami tried unsuccessfully to use locale $value
by setting \$$name to "${value}".
EOF
			exit 1
		fi
	fi
fi

# for testing:
#test -f ./xterm && XTERM_PROGRAM=./xterm

exec "$XTERM_PROGRAM" -class UXTerm -title "$whoami" -u8 "$@"
