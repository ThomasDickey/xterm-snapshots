#!/bin/sh
# $XTermId: uxterm,v 1.23 2006/01/04 02:10:27 tom Exp $
# $XFree86: xc/programs/xterm/uxterm,v 1.12 2006/01/04 02:10:27 dickey Exp $
# wrapper script to setup xterm with UTF-8 locale

: ${XTERM_PROGRAM=xterm}

# Check if there is a workable locale program.  If there is not, we will read
# something via the standard error.  Ignore whatever is written to the
# standard output.
locale=`sh -c "LC_ALL=C LC_CTYPE=C LANG=C locale >/dev/null" 2>&1`
found=no

# Check for -version and -help options, to provide a simple return without
# requiring the program to create a window:
if test $# = 1
then
	case $1 in
	-v|-ver*|-h|-he*)
		$XTERM_PROGRAM "$@"
		exit $?
		;;
	esac
fi

# Check environment variables that xterm does, in the same order:
for name in LC_ALL LC_CTYPE LANG
do
	eval 'value=$'$name
	if test -n "$value" ; then
		case $value in
		*.utf8|*.UTF8|*.utf-8|*.UTF-8)
			found=yes
			;;
		*.utf8@*|*.UTF8@*|*.utf-8@*|*.UTF-8@*)
			found=yes
			;;
		C|POSIX)
			# Yes, I know this is not the same - but why are you
			# here then?
			value=en_US
			;;
		esac
		break
	fi
done

# If we didn't find one that used UTF-8, modify the safest one.  Not everyone
# has a UTF-8 locale installed (and there appears to be no trivial/portable way
# to determine whether it is, from a shell script).  We could check if the
# user's shell does not reset unknown locale specifiers, but not all shells do.
if test $found != yes ; then
	if test -n "$value" ; then
		value=`echo ${value} |sed -e 's/[.@].*//'`.UTF-8
	else
		name="LC_CTYPE"
		value="en_US.UTF-8"
	fi
	eval save=\$${name}
	eval ${name}=${value}
	eval export ${name}
	if test -z "$locale" ; then
		# The 'locale' program tries to do a sanity check.
		check=`sh -c "locale >/dev/null" 2>&1`
		if test -n "$check" ; then
			eval ${name}=${save}
			eval export ${name}

			echo "uxterm tried to use locale $value by setting \$$name" >&2
			xmessage -file - <<EOF
uxterm tried unsuccessfully to use locale $value
by setting \$$name to "${value}".
EOF
			exit 1
		fi
	fi
fi

# for testing:
#test -f ./xterm && XTERM_PROGRAM=./xterm

exec $XTERM_PROGRAM -class UXTerm -title 'uxterm' -u8 "$@"
